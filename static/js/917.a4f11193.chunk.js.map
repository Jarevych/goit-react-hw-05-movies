{"version":3,"file":"static/js/917.a4f11193.chunk.js","mappings":"+SAEMA,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gGAEoBC,EAAAA,EAAAA,IACrB,gDACA,CACEC,OAAQ,CACNF,KAAMA,EACNG,QAASL,KAPZ,UAYqB,OAVlBM,EAFH,QAYUC,OAZV,sBAaK,IAAIC,MAAM,sCAbf,gCAeIF,EAASG,MAfb,sCAiBG,IAAID,MAAM,qCAjBb,gFAqBA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEoBR,EAAAA,EAAAA,IAAA,6CACiBQ,GACtC,CACEP,OAAQ,CACNC,QAASL,KANZ,UAWqB,OATlBM,EAFH,QAWUC,OAXV,sBAYK,IAAIC,MAAM,sCAZf,gCAcIF,EAASG,MAdb,gHAkBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBV,EAAAA,EAAAA,IAAA,4CAErB,CACEC,OAAQ,CACNU,MAAOD,EACPR,QAASL,KAPZ,UAYqB,OAVlBM,EAFH,QAYUC,OAZV,sBAaK,IAAIC,MAAM,sCAbf,gCAeIF,EAASG,MAfb,gHAkBA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BJ,GAA9B,gGAEoBR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,YAErB,CACEP,OAAQ,CACNC,QAASL,KANZ,UAWqB,OATlBM,EAFH,QAWUC,OAXV,sBAYK,IAAIC,MAAM,sCAZf,gCAcIF,EAASG,MAdb,gHAiBA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCL,GAAhC,gGAEoBR,EAAAA,EAAAA,IAAA,6CACiBQ,EADjB,YAErB,CACEP,OAAQ,CACNC,QAASL,KANZ,UAWqB,OATlBM,EAFH,QAWUC,OAXV,sBAYK,IAAIC,MAAM,sCAZf,gCAcIF,EAASG,MAdb,gH,oHC1EQ,SAASQ,IACtB,IAAQN,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAoCQ,EAAAA,EAAAA,UAAS,MAA7C,eAAOC,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAiBL,GACdY,MAAK,SAAAjB,GACJe,EAAcf,EAASkB,QACxB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAI,yBACb,GACJ,GAAE,CAACjB,IACJ,IAAMkB,EAAcC,MAAMC,QAAQX,GAAcA,EAAa,GAC7D,OACE,2BAC0B,IAAvBS,EAAYG,SAAgB,uBAAG,2BAChC,eAAIC,UAAU,YAAd,SACGJ,EAAYK,KAAI,SAAAC,GAAK,OACpB,gBAAIF,UAAU,YAAd,WACE,uBAAIE,EAAMC,UACV,uBAAID,EAAME,YAFmBF,EAAMG,GADjB,QAS7B,C","sources":["api.js","components/ReviewsInfo.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9d5899cc0470980530f09016862b9ba9';\n\nexport async function fetchMovies(page) {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/day',\n      {\n        params: {\n          page: page,\n          api_key: API_KEY,\n        },\n      }\n    );\n\n    if (response.status !== 200) {\n      throw new Error('There is now result for your query');\n    }\n    return response.data;\n  } catch (error) {\n    throw new Error('There is no result for your query');\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n\n    if (response.status !== 200) {\n      throw new Error('There is now result for your query');\n    }\n    return response.data;\n  } catch (error) {}\n}\n\nexport async function fetchSearchMovie(inputValue) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie`,\n      {\n        params: {\n          query: inputValue,\n          api_key: API_KEY,\n        },\n      }\n    );\n\n    if (response.status !== 200) {\n      throw new Error('There is now result for your query');\n    }\n    return response.data;\n  } catch (error) {}\n}\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n\n    if (response.status !== 200) {\n      throw new Error('There is now result for your query');\n    }\n    return response.data;\n  } catch (error) {}\n}\nexport async function fetchMovieReview(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n\n    if (response.status !== 200) {\n      throw new Error('There is now result for your query');\n    }\n    return response.data;\n  } catch (error) {}\n}\n","import { useParams } from 'react-router-dom';\nimport { fetchMovieReview } from '../api';\nimport { useEffect, useState } from 'react';\n\nexport default function ReviewDetails() {\n  const { movieId } = useParams();\n  const [reviewData, setReviewData] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReview(movieId)\n      .then(response => {\n        setReviewData(response.results);\n      })\n      .catch(error => {\n        console.log('review details mistake');\n      });\n  }, [movieId]);\n  const reviewArray = Array.isArray(reviewData) ? reviewData : [];\n  return (\n    <div>\n      {reviewArray.length === 0 && <p>No reviews to display</p>}\n      <ul className=\"movielist\">\n        {reviewArray.map(rData => (\n          <li className=\"movieitem\" key={rData.id}>\n            <p>{rData.author}</p>\n            <p>{rData.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["API_KEY","fetchMovies","page","axios","params","api_key","response","status","Error","data","fetchMovieDetails","movieId","fetchSearchMovie","inputValue","query","fetchMovieCast","fetchMovieReview","ReviewDetails","useParams","useState","reviewData","setReviewData","useEffect","then","results","catch","error","console","log","reviewArray","Array","isArray","length","className","map","rData","author","content","id"],"sourceRoot":""}