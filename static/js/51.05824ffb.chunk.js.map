{"version":3,"file":"static/js/51.05824ffb.chunk.js","mappings":"8SAEMA,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IACrB,gDACA,CACEC,OAAQ,CACNC,QAASJ,KANZ,UAEGK,EAFH,OAUHC,QAAQC,IAAIF,EAASG,MAEG,MAApBH,EAASI,OAZV,sBAaK,IAAIC,MAAM,sCAbf,gCAeIL,EAASG,MAfb,wCAiBG,IAAIE,MAAM,qCAjBb,iFAqBA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEoBV,EAAAA,EAAAA,IAAA,6CACiBU,GACtC,CACET,OAAQ,CACNC,QAASJ,KANZ,UAEGK,EAFH,OAUHC,QAAQC,IAAIF,EAASG,MAEG,MAApBH,EAASI,OAZV,sBAaK,IAAIC,MAAM,sCAbf,gCAeIL,EAASG,MAfb,mHAmBA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,gGAEoBZ,EAAAA,EAAAA,IAAA,4CAErB,CACEC,OAAQ,CACNY,MAAOD,EACPV,QAASJ,KAPZ,UAEGK,EAFH,OAWHC,QAAQC,IAAIF,EAASG,MAEG,MAApBH,EAASI,OAbV,sBAcK,IAAIC,MAAM,sCAdf,gCAgBIL,EAASG,MAhBb,mHAmBA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA8BJ,GAA9B,gGAEoBV,EAAAA,EAAAA,IAAA,6CACiBU,EADjB,YAErB,CACET,OAAQ,CACNC,QAASJ,KANZ,UAEGK,EAFH,OAUHC,QAAQC,IAAIF,EAASG,MAEG,MAApBH,EAASI,OAZV,sBAaK,IAAIC,MAAM,sCAbf,gCAeIL,EAASG,MAfb,mHAkBA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAAgCL,GAAhC,gGAEoBV,EAAAA,EAAAA,IAAA,6CACiBU,EADjB,YAErB,CACET,OAAQ,CACNC,QAASJ,KANZ,UAEGK,EAFH,OAUHC,QAAQC,IAAIF,EAASG,MAEG,MAApBH,EAASI,OAZV,sBAaK,IAAIC,MAAM,sCAbf,gCAeIL,EAASG,MAfb,mH,+IC/EMU,E,OAAqBC,GAAAA,IAAH,sa,SCGhB,SAASC,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAIMC,GAAiBC,EAAAA,EAAAA,cAAW,iBAAC,8GAERxB,EAAAA,EAAAA,MAFQ,OAEzBI,EAFyB,OAG/BkB,EAAalB,EAASqB,SAHS,uGAKhC,KAEHC,EAAAA,EAAAA,YAAU,WACRH,GACD,GAAE,CAACA,IAEJ,IAAMI,EAAaC,MAAMC,QAAQR,IAAcA,EAAUS,OACzD,OACE,UAACb,EAAD,YACE,eAAIc,UAAU,aAAd,SAA2B,oBAE3B,eAAIA,UAAU,YAAd,SACGJ,GACCN,EAAUW,KAAI,SAAAC,GAAS,OACrB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAUE,IAA/B,UACE,gBAAIJ,UAAU,YAAd,WACE,eAAIA,UAAU,aAAd,SACGE,EAAUG,OAASH,EAAUI,MAAQ,WAExC,gBACEC,IACEL,EAAUM,YAAV,0CACuCN,EAAUM,aA7BjE,8EAgCcC,MAAO,IACPC,IAAKR,EAAUG,MAAQH,EAAUI,KAAO,aAXbJ,EAAUE,KAFtB,QAqBhC,C","sources":["api.js","pages/HomePageStyled.js","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9d5899cc0470980530f09016862b9ba9';\n\nexport async function fetchMovies() {\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/day',\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    console.log(response.data);\n\n    if (response.status !== 200) {\n      throw new Error('There is now result for your query');\n    }\n    return response.data;\n  } catch (error) {\n    throw new Error('There is no result for your query');\n  }\n}\n\nexport async function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    console.log(response.data);\n\n    if (response.status !== 200) {\n      throw new Error('There is now result for your query');\n    }\n    return response.data;\n  } catch (error) {}\n}\n\nexport async function fetchSearchMovie(inputValue) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie`,\n      {\n        params: {\n          query: inputValue,\n          api_key: API_KEY,\n        },\n      }\n    );\n    console.log(response.data);\n\n    if (response.status !== 200) {\n      throw new Error('There is now result for your query');\n    }\n    return response.data;\n  } catch (error) {}\n}\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    console.log(response.data);\n\n    if (response.status !== 200) {\n      throw new Error('There is now result for your query');\n    }\n    return response.data;\n  } catch (error) {}\n}\nexport async function fetchMovieReview(movieId) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    console.log(response.data);\n\n    if (response.status !== 200) {\n      throw new Error('There is now result for your query');\n    }\n    return response.data;\n  } catch (error) {}\n}\n","import styled from 'styled-components';\n\nexport const StyledAppContainer = styled.div`\n  .searchbutton {\n    position: absolute;\n    height: 38px;\n    background: none;\n    border: none;\n  }\n  .movielist {\n    display: flex;\n    justify-content: center;\n    gap: 20px;\n    flex-wrap: wrap;\n    padding: 0;\n  }\n  .movieitem {\n    display: flex;\n    flex-direction: column;\n  }\n  .movietitle {\n    max-width: 250px;\n  }\n  .page-title {\n    text-align: center;\n  }\n`;\n","import { useEffect, useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchMovies } from 'api';\nimport { StyledAppContainer } from './HomePageStyled';\n\nexport default function HomePage() {\n  const [trendList, setTrendList] = useState(null);\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  const getTrendMovies = useCallback(async () => {\n    try {\n      const response = await fetchMovies();\n      setTrendList(response.results);\n    } catch (error) {}\n  }, []);\n\n  useEffect(() => {\n    getTrendMovies();\n  }, [getTrendMovies]);\n\n  const showMovies = Array.isArray(trendList) && trendList.length;\n  return (\n    <StyledAppContainer>\n      <h2 className=\"page-title\">Trending today</h2>\n\n      <ul className=\"movielist\">\n        {showMovies &&\n          trendList.map(trendItem => (\n            <Link to={`/movies/${trendItem.id}`}>\n              <li className=\"movieitem\" key={trendItem.id}>\n                <h3 className=\"movietitle\">\n                  {trendItem.title || trendItem.name || 'movie'}\n                </h3>\n                <img\n                  src={\n                    trendItem.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${trendItem.poster_path}`\n                      : defaultImg\n                  }\n                  width={250}\n                  alt={trendItem.title ? trendItem.name : 'poster'}\n                />\n              </li>\n            </Link>\n          ))}\n      </ul>\n    </StyledAppContainer>\n  );\n}\n"],"names":["API_KEY","fetchMovies","axios","params","api_key","response","console","log","data","status","Error","fetchMovieDetails","movieId","fetchSearchMovie","inputValue","query","fetchMovieCast","fetchMovieReview","StyledAppContainer","styled","HomePage","useState","trendList","setTrendList","getTrendMovies","useCallback","results","useEffect","showMovies","Array","isArray","length","className","map","trendItem","to","id","title","name","src","poster_path","width","alt"],"sourceRoot":""}